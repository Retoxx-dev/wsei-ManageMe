{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/Tasks/tasks.service\";\nfunction TaskBoardComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-task-card\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"title\", item_r3.title)(\"status\", item_r3.status);\n  }\n}\nfunction TaskBoardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, TaskBoardComponent_div_3_div_1_Template, 2, 2, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r3.status == \"todo\");\n  }\n}\nfunction TaskBoardComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-task-card\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"title\", item_r6.title)(\"status\", item_r6.status);\n  }\n}\nfunction TaskBoardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, TaskBoardComponent_div_4_div_1_Template, 2, 2, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r6.status == \"doing\");\n  }\n}\nfunction TaskBoardComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-task-card\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"title\", item_r9.title)(\"status\", item_r9.status);\n  }\n}\nfunction TaskBoardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, TaskBoardComponent_div_5_div_1_Template, 2, 2, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r9.status == \"done\");\n  }\n}\nclass TaskBoardComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n  }\n  ngOnInit() {\n    this.tasks = this.taskService.getTasks();\n  }\n}\nTaskBoardComponent.ɵfac = function TaskBoardComponent_Factory(t) {\n  return new (t || TaskBoardComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n};\nTaskBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskBoardComponent,\n  selectors: [[\"app-task-board\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"container\"], [\"class\", \"col-md-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\"], [4, \"ngIf\"], [\"backgroundColor\", \"#ddd\", 3, \"title\", \"status\"], [\"backgroundColor\", \"blue\", 3, \"title\", \"status\"], [\"backgroundColor\", \"green\", 3, \"title\", \"status\"]],\n  template: function TaskBoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-add-item\");\n      i0.ɵɵelementStart(1, \"div\")(2, \"div\", 0);\n      i0.ɵɵtemplate(3, TaskBoardComponent_div_3_Template, 2, 1, \"div\", 1);\n      i0.ɵɵtemplate(4, TaskBoardComponent_div_4_Template, 2, 1, \"div\", 1);\n      i0.ɵɵtemplate(5, TaskBoardComponent_div_5_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { TaskBoardComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","item_r3","title","status","ɵɵtemplate","TaskBoardComponent_div_3_div_1_Template","item_r6","TaskBoardComponent_div_4_div_1_Template","item_r9","TaskBoardComponent_div_5_div_1_Template","TaskBoardComponent","constructor","taskService","ngOnInit","tasks","getTasks","ɵɵdirectiveInject","i1","TasksService","selectors","decls","vars","consts","template","TaskBoardComponent_Template","rf","ctx","TaskBoardComponent_div_3_Template","TaskBoardComponent_div_4_Template","TaskBoardComponent_div_5_Template"],"sources":["C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\Components\\task-board\\task-board.component.ts","C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\Components\\task-board\\task-board.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TasksService } from 'src/app/Services/Tasks/tasks.service';\n\n@Component({\n  selector: 'app-task-board',\n  templateUrl: './task-board.component.html',\n  styleUrls: ['./task-board.component.scss']\n})\nexport class TaskBoardComponent {\n  constructor(private taskService: TasksService) { }\n\n  tasks;\n\n  ngOnInit() {\n    this.tasks = this.taskService.getTasks();\n  }\n}\n","<app-add-item></app-add-item>\n<div>\n    <div class=\"container\">\n      <div class=\"col-md-4\" *ngFor=\"let item of tasks\">\n        <div *ngIf=\"item.status == 'todo'\">\n            <app-task-card [title]=\"item.title\" [status]=\"item.status\" backgroundColor=\"#ddd\"></app-task-card>\n        </div>\n      </div>\n      <div class=\"col-md-4\" *ngFor=\"let item of tasks\">\n        <div *ngIf=\"item.status == 'doing'\">\n            <app-task-card [title]=\"item.title\" [status]=\"item.status\" backgroundColor=\"blue\"></app-task-card>\n        </div>\n      </div>\n      <div class=\"col-md-4\" *ngFor=\"let item of tasks\">\n        <div *ngIf=\"item.status == 'done'\">\n            <app-task-card [title]=\"item.title\" [status]=\"item.status\" backgroundColor=\"green\"></app-task-card>\n        </div>\n      </div>\n    </div>\n</div>"],"mappings":";;;;ICIQA,EAAA,CAAAC,cAAA,UAAmC;IAC/BD,EAAA,CAAAE,SAAA,uBAAkG;IACtGF,EAAA,CAAAG,YAAA,EAAM;;;;IADaH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,UAAA,UAAAC,OAAA,CAAAC,KAAA,CAAoB,WAAAD,OAAA,CAAAE,MAAA;;;;;IAFzCR,EAAA,CAAAC,cAAA,aAAiD;IAC/CD,EAAA,CAAAS,UAAA,IAAAC,uCAAA,iBAEM;IACRV,EAAA,CAAAG,YAAA,EAAM;;;;IAHEH,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,UAAA,SAAAC,OAAA,CAAAE,MAAA,WAA2B;;;;;IAKjCR,EAAA,CAAAC,cAAA,UAAoC;IAChCD,EAAA,CAAAE,SAAA,uBAAkG;IACtGF,EAAA,CAAAG,YAAA,EAAM;;;;IADaH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,UAAA,UAAAM,OAAA,CAAAJ,KAAA,CAAoB,WAAAI,OAAA,CAAAH,MAAA;;;;;IAFzCR,EAAA,CAAAC,cAAA,aAAiD;IAC/CD,EAAA,CAAAS,UAAA,IAAAG,uCAAA,iBAEM;IACRZ,EAAA,CAAAG,YAAA,EAAM;;;;IAHEH,EAAA,CAAAI,SAAA,GAA4B;IAA5BJ,EAAA,CAAAK,UAAA,SAAAM,OAAA,CAAAH,MAAA,YAA4B;;;;;IAKlCR,EAAA,CAAAC,cAAA,UAAmC;IAC/BD,EAAA,CAAAE,SAAA,uBAAmG;IACvGF,EAAA,CAAAG,YAAA,EAAM;;;;IADaH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,UAAA,UAAAQ,OAAA,CAAAN,KAAA,CAAoB,WAAAM,OAAA,CAAAL,MAAA;;;;;IAFzCR,EAAA,CAAAC,cAAA,aAAiD;IAC/CD,EAAA,CAAAS,UAAA,IAAAK,uCAAA,iBAEM;IACRd,EAAA,CAAAG,YAAA,EAAM;;;;IAHEH,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,UAAA,SAAAQ,OAAA,CAAAL,MAAA,WAA2B;;;ADXzC,MAKaO,kBAAkB;EAC7BC,YAAoBC,WAAyB;IAAzB,KAAAA,WAAW,GAAXA,WAAW;EAAkB;EAIjDC,QAAQA,CAAA;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE;EAC1C;;AAPWL,kBAAkB,C;mBAAlBA,kBAAkB,EAAAf,EAAA,CAAAqB,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAAlBR,kBAAkB,C;QAAlBA,kBAAkB;EAAAS,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR/B9B,EAAA,CAAAE,SAAA,mBAA6B;MAC7BF,EAAA,CAAAC,cAAA,UAAK;MAECD,EAAA,CAAAS,UAAA,IAAAuB,iCAAA,iBAIM;MACNhC,EAAA,CAAAS,UAAA,IAAAwB,iCAAA,iBAIM;MACNjC,EAAA,CAAAS,UAAA,IAAAyB,iCAAA,iBAIM;MACRlC,EAAA,CAAAG,YAAA,EAAM;;;MAfmCH,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAAK,UAAA,YAAA0B,GAAA,CAAAZ,KAAA,CAAQ;MAKRnB,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAAK,UAAA,YAAA0B,GAAA,CAAAZ,KAAA,CAAQ;MAKRnB,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAAK,UAAA,YAAA0B,GAAA,CAAAZ,KAAA,CAAQ;;;;;SDLxCJ,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}