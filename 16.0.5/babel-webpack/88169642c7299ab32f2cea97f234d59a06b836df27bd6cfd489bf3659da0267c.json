{"ast":null,"code":"import { Init } from '../../Inits/init-functionalities';\nimport * as i0 from \"@angular/core\";\nclass FunctionalitiesService extends Init {\n  constructor() {\n    super();\n    this.load();\n  }\n  getFunctionalities() {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    return functionalities;\n  }\n  getFunctionalityTitle(functionalityId) {\n    const functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    if (functionalities && functionalities.length > 0) {\n      const functionality = functionalities.find(f => f.id === functionalityId);\n      if (functionality) {\n        return functionality.title;\n      }\n    }\n    return '';\n  }\n  deleteFunctionality(functionalityId) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    for (let i = 0; i < functionalities.length; i++) {\n      if (functionalities[i].id == functionalityId) {\n        functionalities.splice(i, 1);\n      }\n    }\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n  addFunctionality(newFunctionality) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    functionalities.push(newFunctionality);\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n  updateFunctionality(updatedFunctionality) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    for (let i = 0; i < functionalities.length; i++) {\n      if (functionalities[i].id == updatedFunctionality.id) {\n        functionalities[i] = updatedFunctionality;\n      }\n    }\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n  getFunctionalityById(functionalityId) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    return functionalities.find(functionality => functionality.id === functionalityId);\n  }\n}\nFunctionalitiesService.ɵfac = function FunctionalitiesService_Factory(t) {\n  return new (t || FunctionalitiesService)();\n};\nFunctionalitiesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FunctionalitiesService,\n  factory: FunctionalitiesService.ɵfac,\n  providedIn: 'root'\n});\nexport { FunctionalitiesService };","map":{"version":3,"names":["Init","FunctionalitiesService","constructor","load","getFunctionalities","functionalities","JSON","parse","localStorage","getItem","getFunctionalityTitle","functionalityId","length","functionality","find","f","id","title","deleteFunctionality","i","splice","setItem","stringify","addFunctionality","newFunctionality","push","updateFunctionality","updatedFunctionality","getFunctionalityById","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\Services\\Functionalities\\functionalities.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Init } from '../../Inits/init-functionalities';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FunctionalitiesService extends Init{\n  functionalities;\n\n  constructor() { \n    super();\n    this.load();\n  }\n\n  getFunctionalities() {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    return functionalities;\n  }\n\n  getFunctionalityTitle(functionalityId: string): string {\n    const functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    if (functionalities && functionalities.length > 0) {\n      const functionality = functionalities.find((f) => f.id === functionalityId);\n      if (functionality) {\n        return functionality.title;\n      }\n    }\n    return '';\n  }\n\n  deleteFunctionality(functionalityId: string) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    for(let i = 0; i < functionalities.length; i++) {\n      if(functionalities[i].id == functionalityId) {\n        functionalities.splice(i, 1);\n      }\n    }\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n  \n  addFunctionality(newFunctionality) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    functionalities.push(newFunctionality);\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n\n  updateFunctionality(updatedFunctionality) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    for (let i = 0; i < functionalities.length; i++) {\n      if (functionalities[i].id == updatedFunctionality.id) {\n        functionalities[i] = updatedFunctionality;\n      }\n    }\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n\n  getFunctionalityById(functionalityId: string) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    return functionalities.find(functionality => functionality.id === functionalityId);\n  }\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,kCAAkC;;AAEvD,MAIaC,sBAAuB,SAAQD,IAAI;EAG9CE,YAAA;IACE,KAAK,EAAE;IACP,IAAI,CAACC,IAAI,EAAE;EACb;EAEAC,kBAAkBA,CAAA;IAChB,IAAIC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzE,OAAOJ,eAAe;EACxB;EAEAK,qBAAqBA,CAACC,eAAuB;IAC3C,MAAMN,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAC3E,IAAIJ,eAAe,IAAIA,eAAe,CAACO,MAAM,GAAG,CAAC,EAAE;MACjD,MAAMC,aAAa,GAAGR,eAAe,CAACS,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKL,eAAe,CAAC;MAC3E,IAAIE,aAAa,EAAE;QACjB,OAAOA,aAAa,CAACI,KAAK;;;IAG9B,OAAO,EAAE;EACX;EAEAC,mBAAmBA,CAACP,eAAuB;IACzC,IAAIN,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzE,KAAI,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,eAAe,CAACO,MAAM,EAAEO,CAAC,EAAE,EAAE;MAC9C,IAAGd,eAAe,CAACc,CAAC,CAAC,CAACH,EAAE,IAAIL,eAAe,EAAE;QAC3CN,eAAe,CAACe,MAAM,CAACD,CAAC,EAAE,CAAC,CAAC;;;IAGhCX,YAAY,CAACa,OAAO,CAAC,iBAAiB,EAAEf,IAAI,CAACgB,SAAS,CAACjB,eAAe,CAAC,CAAC;EAC1E;EAEAkB,gBAAgBA,CAACC,gBAAgB;IAC/B,IAAInB,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzEJ,eAAe,CAACoB,IAAI,CAACD,gBAAgB,CAAC;IACtChB,YAAY,CAACa,OAAO,CAAC,iBAAiB,EAAEf,IAAI,CAACgB,SAAS,CAACjB,eAAe,CAAC,CAAC;EAC1E;EAEAqB,mBAAmBA,CAACC,oBAAoB;IACtC,IAAItB,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzE,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,eAAe,CAACO,MAAM,EAAEO,CAAC,EAAE,EAAE;MAC/C,IAAId,eAAe,CAACc,CAAC,CAAC,CAACH,EAAE,IAAIW,oBAAoB,CAACX,EAAE,EAAE;QACpDX,eAAe,CAACc,CAAC,CAAC,GAAGQ,oBAAoB;;;IAG7CnB,YAAY,CAACa,OAAO,CAAC,iBAAiB,EAAEf,IAAI,CAACgB,SAAS,CAACjB,eAAe,CAAC,CAAC;EAC1E;EAEAuB,oBAAoBA,CAACjB,eAAuB;IAC1C,IAAIN,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzE,OAAOJ,eAAe,CAACS,IAAI,CAACD,aAAa,IAAIA,aAAa,CAACG,EAAE,KAAKL,eAAe,CAAC;EACpF;;AArDWV,sBAAuB,C;mBAAvBA,sBAAsB;AAAA;AAAtBA,sBAAuB,C;SAAvBA,sBAAsB;EAAA4B,OAAA,EAAtB5B,sBAAsB,CAAA6B,IAAA;EAAAC,UAAA,EAHrB;AAAM;SAGP9B,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}