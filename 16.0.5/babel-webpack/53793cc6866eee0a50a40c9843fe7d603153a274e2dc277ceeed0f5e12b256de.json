{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/Tasks/tasks.service\";\nimport * as i2 from \"src/app/Services/CurrentStaticData/current-static-data.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../task-card/task-card.component\";\nfunction KanbanBoardComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-task-card\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", item_r3.id)(\"title\", item_r3.title)(\"status\", item_r3.status)(\"functionality_id\", item_r3.functionality_id)(\"assignedTo\", ctx_r4.checkUser(item_r3.id));\n  }\n}\nfunction KanbanBoardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, KanbanBoardComponent_div_5_div_1_Template, 2, 5, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r3.status == \"todo\");\n  }\n}\nfunction KanbanBoardComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-task-card\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", item_r6.id)(\"title\", item_r6.title)(\"status\", item_r6.status)(\"functionality_id\", item_r6.functionality_id)(\"assignedTo\", ctx_r7.checkUser(item_r6.id));\n  }\n}\nfunction KanbanBoardComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, KanbanBoardComponent_div_9_div_1_Template, 2, 5, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r6.status == \"doing\");\n  }\n}\nfunction KanbanBoardComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-task-card\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r9 = i0.ɵɵnextContext().$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", item_r9.id)(\"title\", item_r9.title)(\"status\", item_r9.status)(\"functionality_id\", item_r9.functionality_id)(\"assignedTo\", ctx_r10.checkUser(item_r9.id));\n  }\n}\nfunction KanbanBoardComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, KanbanBoardComponent_div_13_div_1_Template, 2, 5, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r9.status == \"done\");\n  }\n}\nclass KanbanBoardComponent {\n  constructor(taskService, currentStaticDataService) {\n    this.taskService = taskService;\n    this.currentStaticDataService = currentStaticDataService;\n  }\n  ngOnInit() {\n    this.tasks = this.taskService.getTasks();\n    this.currentUser = this.currentStaticDataService.getCurrentUser();\n  }\n  checkUser(taskId) {\n    let task = this.taskService.getTaskById(taskId);\n    if (task.assigned_to == this.currentUser.id) {\n      return this.currentUser.FirstName + \" \" + this.currentUser.LastName;\n    } else {\n      return \"\";\n    }\n  }\n}\nKanbanBoardComponent.ɵfac = function KanbanBoardComponent_Factory(t) {\n  return new (t || KanbanBoardComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.CurrentStaticDataService));\n};\nKanbanBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: KanbanBoardComponent,\n  selectors: [[\"app-kanban-board\"]],\n  inputs: {\n    status: \"status\"\n  },\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"column\"], [\"class\", \"col-md-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\"], [4, \"ngIf\"], [\"backgroundColor\", \"#ddd\", 3, \"id\", \"title\", \"status\", \"functionality_id\", \"assignedTo\"], [\"backgroundColor\", \"blue\", 3, \"id\", \"title\", \"status\", \"functionality_id\", \"assignedTo\"], [\"backgroundColor\", \"green\", 3, \"id\", \"title\", \"status\", \"functionality_id\", \"assignedTo\"]],\n  template: function KanbanBoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"div\", 1)(3, \"h3\");\n      i0.ɵɵtext(4, \"TODO\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, KanbanBoardComponent_div_5_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"h3\");\n      i0.ɵɵtext(8, \"DOING\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, KanbanBoardComponent_div_9_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"h3\");\n      i0.ɵɵtext(12, \"DONE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, KanbanBoardComponent_div_13_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.TaskCardComponent],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr; \\n\\n  gap: 20px; \\n\\n}\\n\\n.column[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50cy9rYW5iYW4tYm9hcmQva2FuYmFuLWJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLGtDQUFBLEVBQUEsOEJBQUE7RUFDQSxTQUFBLEVBQUEsd0JBQUE7QUFDSjs7QUFFQTtFQUVFLGFBQUE7QUFBRiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7IC8qIFRocmVlIGVxdWFsLXdpZHRoIGNvbHVtbnMgKi9cclxuICAgIGdhcDogMjBweDsgLyogR2FwIGJldHdlZW4gY29sdW1ucyAqL1xyXG59XHJcblxyXG4uY29sdW1uIHtcclxuICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { KanbanBoardComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","item_r3","id","title","status","functionality_id","ctx_r4","checkUser","ɵɵtemplate","KanbanBoardComponent_div_5_div_1_Template","item_r6","ctx_r7","KanbanBoardComponent_div_9_div_1_Template","item_r9","ctx_r10","KanbanBoardComponent_div_13_div_1_Template","KanbanBoardComponent","constructor","taskService","currentStaticDataService","ngOnInit","tasks","getTasks","currentUser","getCurrentUser","taskId","task","getTaskById","assigned_to","FirstName","LastName","ɵɵdirectiveInject","i1","TasksService","i2","CurrentStaticDataService","selectors","inputs","decls","vars","consts","template","KanbanBoardComponent_Template","rf","ctx","ɵɵtext","KanbanBoardComponent_div_5_Template","KanbanBoardComponent_div_9_Template","KanbanBoardComponent_div_13_Template"],"sources":["C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\Components\\kanban-board\\kanban-board.component.ts","C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\Components\\kanban-board\\kanban-board.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { TasksService } from '../../Services/Tasks/tasks.service';\nimport { CurrentStaticDataService } from 'src/app/Services/CurrentStaticData/current-static-data.service';\n\n@Component({\n  selector: 'app-kanban-board',\n  templateUrl: './kanban-board.component.html',\n  styleUrls: ['./kanban-board.component.scss']\n})\nexport class KanbanBoardComponent {\n  @Input() status: string;\n\n  constructor(private taskService: TasksService, private currentStaticDataService: CurrentStaticDataService) { }\n\n  tasks;\n  currentUser;\n\n  ngOnInit() {\n    this.tasks = this.taskService.getTasks();\n    this.currentUser = this.currentStaticDataService.getCurrentUser();\n  }\n\n  checkUser(taskId: string) {\n    let task = this.taskService.getTaskById(taskId);\n    if (task.assigned_to == this.currentUser.id) {\n      return this.currentUser.FirstName + \" \" + this.currentUser.LastName;\n    } else {\n      return \"\";\n    }\n  }\n}\n","<div>\n  <div class=\"container\">\n    <div class=\"column\">\n        <h3>TODO</h3>\n        <div class=\"col-md-4\" *ngFor=\"let item of tasks\">\n            <div *ngIf=\"item.status == 'todo'\">\n                <app-task-card [id]=\"item.id\" [title]=\"item.title\" [status]=\"item.status\" [functionality_id]=\"item.functionality_id\" [assignedTo]=\"checkUser(item.id)\" backgroundColor=\"#ddd\"></app-task-card>\n            </div>\n        </div>\n    </div>\n    <div class=\"column\">\n        <h3>DOING</h3>\n        <div class=\"col-md-4\" *ngFor=\"let item of tasks\">\n            <div *ngIf=\"item.status == 'doing'\">\n                <app-task-card [id]=\"item.id\" [title]=\"item.title\" [status]=\"item.status\" [functionality_id]=\"item.functionality_id\" [assignedTo]=\"checkUser(item.id)\" backgroundColor=\"blue\"></app-task-card>\n            </div>\n        </div>\n    </div>\n    <div class=\"column\">\n        <h3>DONE</h3>\n        <div class=\"col-md-4\" *ngFor=\"let item of tasks\">\n            <div *ngIf=\"item.status == 'done'\">\n                <app-task-card [id]=\"item.id\" [title]=\"item.title\" [status]=\"item.status\" [functionality_id]=\"item.functionality_id\" [assignedTo]=\"checkUser(item.id)\" backgroundColor=\"green\"></app-task-card>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}