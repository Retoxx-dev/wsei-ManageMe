{"ast":null,"code":"import { Init } from '../../Inits/init-tasks';\nimport * as i0 from \"@angular/core\";\nclass TasksService extends Init {\n  constructor() {\n    super();\n    this.load();\n  }\n  getTasks() {\n    let tasks = JSON.parse(localStorage.getItem('tasks'));\n    return tasks;\n  }\n  addTask(newTask) {\n    let tasks = JSON.parse(localStorage.getItem('tasks'));\n    tasks.push(newTask);\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  deleteTask(taskId) {\n    const index = this.tasks.findIndex(task => task.id === taskId);\n    if (index !== -1) {\n      this.tasks.splice(index, 1);\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    }\n  }\n}\nTasksService.ɵfac = function TasksService_Factory(t) {\n  return new (t || TasksService)();\n};\nTasksService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TasksService,\n  factory: TasksService.ɵfac,\n  providedIn: 'root'\n});\nexport { TasksService };","map":{"version":3,"names":["Init","TasksService","constructor","load","getTasks","tasks","JSON","parse","localStorage","getItem","addTask","newTask","push","setItem","stringify","deleteTask","taskId","index","findIndex","task","id","splice","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\Services\\Tasks\\tasks.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Init } from '../../Inits/init-tasks';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TasksService extends Init{\n  tasks;\n\n  constructor() { \n    super();\n    this.load();\n  }\n\n  getTasks() {\n    let tasks = JSON.parse(localStorage.getItem('tasks'));\n    return tasks;\n  }\n\n  addTask(newTask) {\n    let tasks = JSON.parse(localStorage.getItem('tasks'));\n    tasks.push(newTask);\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  deleteTask(taskId: string): void {\n    const index = this.tasks.findIndex(task => task.id === taskId);\n    if (index !== -1) {\n      this.tasks.splice(index, 1);\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    }\n  }\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,wBAAwB;;AAE7C,MAIaC,YAAa,SAAQD,IAAI;EAGpCE,YAAA;IACE,KAAK,EAAE;IACP,IAAI,CAACC,IAAI,EAAE;EACb;EAEAC,QAAQA,CAAA;IACN,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IACrD,OAAOJ,KAAK;EACd;EAEAK,OAAOA,CAACC,OAAO;IACb,IAAIN,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IACrDJ,KAAK,CAACO,IAAI,CAACD,OAAO,CAAC;IACnBH,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACQ,SAAS,CAACT,KAAK,CAAC,CAAC;EACtD;EAEAU,UAAUA,CAACC,MAAc;IACvB,MAAMC,KAAK,GAAG,IAAI,CAACZ,KAAK,CAACa,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAAC;IAC9D,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACZ,KAAK,CAACgB,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MAC3BT,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACQ,SAAS,CAAC,IAAI,CAACT,KAAK,CAAC,CAAC;;EAE7D;;AAzBWJ,YAAa,C;mBAAbA,YAAY;AAAA;AAAZA,YAAa,C;SAAbA,YAAY;EAAAqB,OAAA,EAAZrB,YAAY,CAAAsB,IAAA;EAAAC,UAAA,EAHX;AAAM;SAGPvB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}