{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass DataService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000'; // Replace with your API URL\n  }\n  // Functionality APIs\n  getFunctionalities() {\n    const url = `${this.apiUrl}/functionalities`;\n    return this.http.get(url);\n  }\n  createFunctionality(functionality) {\n    const url = `${this.apiUrl}/functionalities`;\n    return this.http.post(url, functionality);\n  }\n  deleteFunctionality(functionalityId) {\n    const url = `${this.apiUrl}/functionalities/${functionalityId}`;\n    return this.http.delete(url);\n  }\n  // Task APIs\n  createTask(functionalityId, task) {\n    const url = `${this.apiUrl}/functionalities/${functionalityId}/tasks`;\n    return this.http.post(url, task);\n  }\n  updateTask(functionalityId, task) {\n    const url = `${this.apiUrl}/functionalities/${functionalityId}/tasks/${task.id}`;\n    return this.http.put(url, task);\n  }\n  deleteTask(functionalityId, taskId) {\n    const url = `${this.apiUrl}/functionalities/${functionalityId}/tasks/${taskId}`;\n    return this.http.delete(url);\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});\nexport { DataService };","map":{"version":3,"names":["DataService","constructor","http","apiUrl","getFunctionalities","url","get","createFunctionality","functionality","post","deleteFunctionality","functionalityId","delete","createTask","task","updateTask","id","put","deleteTask","taskId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Functionality } from './functionality';\nimport { Task } from './task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private apiUrl = 'http://localhost:3000'; // Replace with your API URL\n\n  constructor(private http: HttpClient) { }\n\n  // Functionality APIs\n  getFunctionalities(): Observable<Functionality[]> {\n    const url = `${this.apiUrl}/functionalities`;\n    return this.http.get<Functionality[]>(url);\n  }\n\n  createFunctionality(functionality: Functionality): Observable<Functionality> {\n    const url = `${this.apiUrl}/functionalities`;\n    return this.http.post<Functionality>(url, functionality);\n  }\n\n  deleteFunctionality(functionalityId: number): Observable<void> {\n    const url = `${this.apiUrl}/functionalities/${functionalityId}`;\n    return this.http.delete<void>(url);\n  }\n\n  // Task APIs\n  createTask(functionalityId: number, task: Task): Observable<Task> {\n    const url = `${this.apiUrl}/functionalities/${functionalityId}/tasks`;\n    return this.http.post<Task>(url, task);\n  }\n\n  updateTask(functionalityId: number, task: Task): Observable<Task> {\n    const url = `${this.apiUrl}/functionalities/${functionalityId}/tasks/${task.id}`;\n    return this.http.put<Task>(url, task);\n  }\n\n  deleteTask(functionalityId: number, taskId: number): Observable<void> {\n    const url = `${this.apiUrl}/functionalities/${functionalityId}/tasks/${taskId}`;\n    return this.http.delete<void>(url);\n  }\n}"],"mappings":";;AAMA,MAGaA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB,CAAC,CAAC;EAEF;EAExC;EACAC,kBAAkBA,CAAA;IAChB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,kBAAkB;IAC5C,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAkBD,GAAG,CAAC;EAC5C;EAEAE,mBAAmBA,CAACC,aAA4B;IAC9C,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,kBAAkB;IAC5C,OAAO,IAAI,CAACD,IAAI,CAACO,IAAI,CAAgBJ,GAAG,EAAEG,aAAa,CAAC;EAC1D;EAEAE,mBAAmBA,CAACC,eAAuB;IACzC,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,oBAAoBQ,eAAe,EAAE;IAC/D,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CAAOP,GAAG,CAAC;EACpC;EAEA;EACAQ,UAAUA,CAACF,eAAuB,EAAEG,IAAU;IAC5C,MAAMT,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,oBAAoBQ,eAAe,QAAQ;IACrE,OAAO,IAAI,CAACT,IAAI,CAACO,IAAI,CAAOJ,GAAG,EAAES,IAAI,CAAC;EACxC;EAEAC,UAAUA,CAACJ,eAAuB,EAAEG,IAAU;IAC5C,MAAMT,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,oBAAoBQ,eAAe,UAAUG,IAAI,CAACE,EAAE,EAAE;IAChF,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAOZ,GAAG,EAAES,IAAI,CAAC;EACvC;EAEAI,UAAUA,CAACP,eAAuB,EAAEQ,MAAc;IAChD,MAAMd,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,oBAAoBQ,eAAe,UAAUQ,MAAM,EAAE;IAC/E,OAAO,IAAI,CAACjB,IAAI,CAACU,MAAM,CAAOP,GAAG,CAAC;EACpC;;AAnCWL,WAAW,C;mBAAXA,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXvB,WAAW,C;SAAXA,WAAW;EAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEP1B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}