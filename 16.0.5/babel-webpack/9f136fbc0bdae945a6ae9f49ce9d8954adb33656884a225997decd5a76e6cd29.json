{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/Tasks/tasks.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AddTaskComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function AddTaskComponent_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closeModal());\n    });\n    i0.ɵɵtext(2, \"Close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3)(4, \"h2\");\n    i0.ɵɵtext(5, \"Add Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function AddTaskComponent_div_2_Template_form_ngSubmit_6_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.addItem());\n    });\n    i0.ɵɵelementStart(7, \"label\", 5);\n    i0.ɵɵtext(8, \"Title: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 6);\n    i0.ɵɵelementStart(10, \"button\", 7);\n    i0.ɵɵtext(11, \"Submit\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.itemForm);\n  }\n}\nclass AddTaskComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.showModal = false;\n    this.itemForm = new FormGroup({\n      title: new FormControl('')\n    });\n  }\n  openModal() {\n    this.showModal = true;\n  }\n  generateId() {\n    const timestamp = new Date().getTime();\n    return timestamp.toString();\n  }\n  addItem() {\n    let newItem = {\n      id: this.generateId(),\n      title: this.itemForm.value.title,\n      status: 'todo'\n    };\n    this.taskService.addTask(newItem);\n    this.closeModal();\n    window.location.reload();\n  }\n  closeModal() {\n    this.showModal = false;\n  }\n}\nAddTaskComponent.ɵfac = function AddTaskComponent_Factory(t) {\n  return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n};\nAddTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddTaskComponent,\n  selectors: [[\"app-add-task\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[3, \"click\"], [\"class\", \"modal\", 4, \"ngIf\"], [1, \"modal\"], [1, \"modal-content\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"formControlName\", \"title\"], [\"type\", \"submit\"]],\n  template: function AddTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function AddTaskComponent_Template_button_click_0_listener() {\n        return ctx.openModal();\n      });\n      i0.ɵɵtext(1, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AddTaskComponent_div_2_Template, 12, 1, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showModal);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AddTaskComponent };","map":{"version":3,"names":["FormControl","FormGroup","i0","ɵɵelementStart","ɵɵlistener","AddTaskComponent_div_2_Template_button_click_1_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","closeModal","ɵɵtext","ɵɵelementEnd","AddTaskComponent_div_2_Template_form_ngSubmit_6_listener","ctx_r3","addItem","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","itemForm","AddTaskComponent","constructor","taskService","showModal","title","openModal","generateId","timestamp","Date","getTime","toString","newItem","id","value","status","addTask","window","location","reload","ɵɵdirectiveInject","i1","TasksService","selectors","decls","vars","consts","template","AddTaskComponent_Template","rf","ctx","AddTaskComponent_Template_button_click_0_listener","ɵɵtemplate","AddTaskComponent_div_2_Template"],"sources":["C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\Components\\add-task\\add-task.component.ts","C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\Components\\add-task\\add-task.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { TasksService } from 'src/app/Services/Tasks/tasks.service';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.scss']\n})\nexport class AddTaskComponent {\n  constructor(private taskService: TasksService) { }\n\n  showModal = false;\n  taskTitle: string;\n\n  itemForm = new FormGroup({\n    title: new FormControl('')\n  });\n\n  openModal() {\n    this.showModal = true;\n  }\n\n  generateId(): string {\n    const timestamp = new Date().getTime();\n    return timestamp.toString();\n  }\n\n  addItem() {\n    let newItem = {\n      id: this.generateId(),\n      title: this.itemForm.value.title,\n      status: 'todo'\n    };\n\n    this.taskService.addTask(newItem);\n\n    this.closeModal();\n    window.location.reload();\n  }\n\n  closeModal() {\n    this.showModal = false;\n  }\n}\n","<button (click)=\"openModal()\">Add</button>\n\n<div *ngIf=\"showModal\" class=\"modal\">\n  <button (click)=\"closeModal()\">Close</button>\n  <div class=\"modal-content\">\n    <h2>Add Task</h2>\n        <form [formGroup]=\"itemForm\" (ngSubmit)=\"addItem()\">\n            <label for=\"title\">Title: </label>\n            <input id=\"title\" type=\"text\" formControlName=\"title\">    \n        <button type=\"submit\">Submit</button>\n    </form>\n  </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}