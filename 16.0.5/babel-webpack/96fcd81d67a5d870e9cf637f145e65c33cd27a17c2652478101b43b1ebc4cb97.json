{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/Tasks/tasks.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../task-card/task-card.component\";\nimport * as i4 from \"../add-task/add-task.component\";\nimport * as i5 from \"../task-modal/task-modal.component\";\nfunction TaskBoardComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-task-card\", 5);\n    i0.ɵɵlistener(\"deleteTask\", function TaskBoardComponent_div_3_div_1_Template_app_task_card_deleteTask_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.deleteTask($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", item_r4.id)(\"title\", item_r4.title)(\"status\", item_r4.status);\n  }\n}\nfunction TaskBoardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, TaskBoardComponent_div_3_div_1_Template, 2, 3, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r4.status == \"todo\");\n  }\n}\nfunction TaskBoardComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-task-card\", 6);\n    i0.ɵɵlistener(\"deleteTask\", function TaskBoardComponent_div_4_div_1_Template_app_task_card_deleteTask_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.deleteTask($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", item_r9.id)(\"title\", item_r9.title)(\"status\", item_r9.status);\n  }\n}\nfunction TaskBoardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, TaskBoardComponent_div_4_div_1_Template, 2, 3, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r9.status == \"doing\");\n  }\n}\nfunction TaskBoardComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-task-card\", 7);\n    i0.ɵɵlistener(\"deleteTask\", function TaskBoardComponent_div_5_div_1_Template_app_task_card_deleteTask_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.deleteTask($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", item_r14.id)(\"title\", item_r14.title)(\"status\", item_r14.status);\n  }\n}\nfunction TaskBoardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, TaskBoardComponent_div_5_div_1_Template, 2, 3, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r14.status == \"done\");\n  }\n}\nfunction TaskBoardComponent_app_task_modal_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-task-modal\", 8);\n    i0.ɵɵlistener(\"closeModal\", function TaskBoardComponent_app_task_modal_6_Template_app_task_modal_closeModal_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.closeTaskModal());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"task\", ctx_r3.selectedTask);\n  }\n}\nclass TaskBoardComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n  }\n  deleteTask(taskId) {\n    console.log(taskId);\n    this.taskService.deleteTask(taskId);\n    this.tasks = this.taskService.getTasks();\n  }\n  ngOnInit() {\n    this.tasks = this.taskService.getTasks();\n  }\n  openTaskModal(task) {\n    this.selectedTask = task;\n  }\n  closeTaskModal() {\n    this.selectedTask = null;\n  }\n}\nTaskBoardComponent.ɵfac = function TaskBoardComponent_Factory(t) {\n  return new (t || TaskBoardComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n};\nTaskBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskBoardComponent,\n  selectors: [[\"app-task-board\"]],\n  decls: 7,\n  vars: 4,\n  consts: [[1, \"container\"], [\"class\", \"col-md-4\", 4, \"ngFor\", \"ngForOf\"], [3, \"task\", \"closeModal\", 4, \"ngIf\"], [1, \"col-md-4\"], [4, \"ngIf\"], [\"backgroundColor\", \"#ddd\", 3, \"id\", \"title\", \"status\", \"deleteTask\"], [\"backgroundColor\", \"blue\", 3, \"id\", \"title\", \"status\", \"deleteTask\"], [\"backgroundColor\", \"green\", 3, \"id\", \"title\", \"status\", \"deleteTask\"], [3, \"task\", \"closeModal\"]],\n  template: function TaskBoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-add-task\");\n      i0.ɵɵelementStart(1, \"div\")(2, \"div\", 0);\n      i0.ɵɵtemplate(3, TaskBoardComponent_div_3_Template, 2, 1, \"div\", 1);\n      i0.ɵɵtemplate(4, TaskBoardComponent_div_4_Template, 2, 1, \"div\", 1);\n      i0.ɵɵtemplate(5, TaskBoardComponent_div_5_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, TaskBoardComponent_app_task_modal_6_Template, 1, 1, \"app-task-modal\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedTask);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.TaskCardComponent, i4.AddTaskComponent, i5.TaskModalComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { TaskBoardComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TaskBoardComponent_div_3_div_1_Template_app_task_card_deleteTask_1_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","deleteTask","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","item_r4","id","title","status","ɵɵtemplate","TaskBoardComponent_div_3_div_1_Template","TaskBoardComponent_div_4_div_1_Template_app_task_card_deleteTask_1_listener","_r12","ctx_r11","item_r9","TaskBoardComponent_div_4_div_1_Template","TaskBoardComponent_div_5_div_1_Template_app_task_card_deleteTask_1_listener","_r17","ctx_r16","item_r14","TaskBoardComponent_div_5_div_1_Template","TaskBoardComponent_app_task_modal_6_Template_app_task_modal_closeModal_0_listener","_r20","ctx_r19","closeTaskModal","ctx_r3","selectedTask","TaskBoardComponent","constructor","taskService","taskId","console","log","tasks","getTasks","ngOnInit","openTaskModal","task","ɵɵdirectiveInject","i1","TasksService","selectors","decls","vars","consts","template","TaskBoardComponent_Template","rf","ctx","ɵɵelement","TaskBoardComponent_div_3_Template","TaskBoardComponent_div_4_Template","TaskBoardComponent_div_5_Template","TaskBoardComponent_app_task_modal_6_Template"],"sources":["C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\Components\\task-board\\task-board.component.ts","C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\Components\\task-board\\task-board.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TasksService } from 'src/app/Services/Tasks/tasks.service';\n\n@Component({\n  selector: 'app-task-board',\n  templateUrl: './task-board.component.html',\n  styleUrls: ['./task-board.component.scss']\n})\nexport class TaskBoardComponent {\n  constructor(private taskService: TasksService) { }\n\n  tasks;\n  selectedTask;\n\n  deleteTask(taskId: string) {\n    console.log(taskId);\n    this.taskService.deleteTask(taskId);\n    this.tasks = this.taskService.getTasks();\n  }\n\n  ngOnInit() {\n    this.tasks = this.taskService.getTasks();\n  }\n\n  openTaskModal(task) {\n    this.selectedTask = task;\n  }\n\n  closeTaskModal() {\n    this.selectedTask = null;\n  }\n}\n","<app-add-task></app-add-task>\n<div>\n    <div class=\"container\">\n      <div class=\"col-md-4\" *ngFor=\"let item of tasks\">\n        <div *ngIf=\"item.status == 'todo'\">\n            <app-task-card [id]=\"item.id\" [title]=\"item.title\" [status]=\"item.status\" backgroundColor=\"#ddd\" (deleteTask)=\"deleteTask($event)\"></app-task-card>\n        </div>\n      </div>\n      <div class=\"col-md-4\" *ngFor=\"let item of tasks\">\n        <div *ngIf=\"item.status == 'doing'\">\n            <app-task-card [id]=\"item.id\" [title]=\"item.title\" [status]=\"item.status\" backgroundColor=\"blue\" (deleteTask)=\"deleteTask($event)\"></app-task-card>\n        </div>\n      </div>\n      <div class=\"col-md-4\" *ngFor=\"let item of tasks\">\n        <div *ngIf=\"item.status == 'done'\">\n            <app-task-card [id]=\"item.id\" [title]=\"item.title\" [status]=\"item.status\" backgroundColor=\"green\" (deleteTask)=\"deleteTask($event)\"></app-task-card>\n        </div>\n      </div>\n    </div>\n</div>\n\n<app-task-modal *ngIf=\"selectedTask\" [task]=\"selectedTask\" (closeModal)=\"closeTaskModal()\"></app-task-modal>"],"mappings":";;;;;;;;;ICIQA,EAAA,CAAAC,cAAA,UAAmC;IACkED,EAAA,CAAAE,UAAA,wBAAAC,4EAAAC,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAP,EAAA,CAAAQ,aAAA;MAAA,OAAcR,EAAA,CAAAS,WAAA,CAAAF,MAAA,CAAAG,UAAA,CAAAN,MAAA,CAAkB;IAAA,EAAC;IAACJ,EAAA,CAAAW,YAAA,EAAgB;;;;IAApIX,EAAA,CAAAY,SAAA,GAAc;IAAdZ,EAAA,CAAAa,UAAA,OAAAC,OAAA,CAAAC,EAAA,CAAc,UAAAD,OAAA,CAAAE,KAAA,YAAAF,OAAA,CAAAG,MAAA;;;;;IAFnCjB,EAAA,CAAAC,cAAA,aAAiD;IAC/CD,EAAA,CAAAkB,UAAA,IAAAC,uCAAA,iBAEM;IACRnB,EAAA,CAAAW,YAAA,EAAM;;;;IAHEX,EAAA,CAAAY,SAAA,GAA2B;IAA3BZ,EAAA,CAAAa,UAAA,SAAAC,OAAA,CAAAG,MAAA,WAA2B;;;;;;IAKjCjB,EAAA,CAAAC,cAAA,UAAoC;IACiED,EAAA,CAAAE,UAAA,wBAAAkB,4EAAAhB,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAgB,IAAA;MAAA,MAAAC,OAAA,GAAAtB,EAAA,CAAAQ,aAAA;MAAA,OAAcR,EAAA,CAAAS,WAAA,CAAAa,OAAA,CAAAZ,UAAA,CAAAN,MAAA,CAAkB;IAAA,EAAC;IAACJ,EAAA,CAAAW,YAAA,EAAgB;;;;IAApIX,EAAA,CAAAY,SAAA,GAAc;IAAdZ,EAAA,CAAAa,UAAA,OAAAU,OAAA,CAAAR,EAAA,CAAc,UAAAQ,OAAA,CAAAP,KAAA,YAAAO,OAAA,CAAAN,MAAA;;;;;IAFnCjB,EAAA,CAAAC,cAAA,aAAiD;IAC/CD,EAAA,CAAAkB,UAAA,IAAAM,uCAAA,iBAEM;IACRxB,EAAA,CAAAW,YAAA,EAAM;;;;IAHEX,EAAA,CAAAY,SAAA,GAA4B;IAA5BZ,EAAA,CAAAa,UAAA,SAAAU,OAAA,CAAAN,MAAA,YAA4B;;;;;;IAKlCjB,EAAA,CAAAC,cAAA,UAAmC;IACmED,EAAA,CAAAE,UAAA,wBAAAuB,4EAAArB,MAAA;MAAAJ,EAAA,CAAAK,aAAA,CAAAqB,IAAA;MAAA,MAAAC,OAAA,GAAA3B,EAAA,CAAAQ,aAAA;MAAA,OAAcR,EAAA,CAAAS,WAAA,CAAAkB,OAAA,CAAAjB,UAAA,CAAAN,MAAA,CAAkB;IAAA,EAAC;IAACJ,EAAA,CAAAW,YAAA,EAAgB;;;;IAArIX,EAAA,CAAAY,SAAA,GAAc;IAAdZ,EAAA,CAAAa,UAAA,OAAAe,QAAA,CAAAb,EAAA,CAAc,UAAAa,QAAA,CAAAZ,KAAA,YAAAY,QAAA,CAAAX,MAAA;;;;;IAFnCjB,EAAA,CAAAC,cAAA,aAAiD;IAC/CD,EAAA,CAAAkB,UAAA,IAAAW,uCAAA,iBAEM;IACR7B,EAAA,CAAAW,YAAA,EAAM;;;;IAHEX,EAAA,CAAAY,SAAA,GAA2B;IAA3BZ,EAAA,CAAAa,UAAA,SAAAe,QAAA,CAAAX,MAAA,WAA2B;;;;;;IAOzCjB,EAAA,CAAAC,cAAA,wBAA2F;IAAhCD,EAAA,CAAAE,UAAA,wBAAA4B,kFAAA;MAAA9B,EAAA,CAAAK,aAAA,CAAA0B,IAAA;MAAA,MAAAC,OAAA,GAAAhC,EAAA,CAAAQ,aAAA;MAAA,OAAcR,EAAA,CAAAS,WAAA,CAAAuB,OAAA,CAAAC,cAAA,EAAgB;IAAA,EAAC;IAACjC,EAAA,CAAAW,YAAA,EAAiB;;;;IAAvEX,EAAA,CAAAa,UAAA,SAAAqB,MAAA,CAAAC,YAAA,CAAqB;;;ADlB1D,MAKaC,kBAAkB;EAC7BC,YAAoBC,WAAyB;IAAzB,KAAAA,WAAW,GAAXA,WAAW;EAAkB;EAKjD5B,UAAUA,CAAC6B,MAAc;IACvBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,IAAI,CAACD,WAAW,CAAC5B,UAAU,CAAC6B,MAAM,CAAC;IACnC,IAAI,CAACG,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;EAC1C;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACF,KAAK,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE;EAC1C;EAEAE,aAAaA,CAACC,IAAI;IAChB,IAAI,CAACX,YAAY,GAAGW,IAAI;EAC1B;EAEAb,cAAcA,CAAA;IACZ,IAAI,CAACE,YAAY,GAAG,IAAI;EAC1B;;AAtBWC,kBAAkB,C;mBAAlBA,kBAAkB,EAAApC,EAAA,CAAA+C,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAAlBb,kBAAkB,C;QAAlBA,kBAAkB;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR/BxD,EAAA,CAAA0D,SAAA,mBAA6B;MAC7B1D,EAAA,CAAAC,cAAA,UAAK;MAECD,EAAA,CAAAkB,UAAA,IAAAyC,iCAAA,iBAIM;MACN3D,EAAA,CAAAkB,UAAA,IAAA0C,iCAAA,iBAIM;MACN5D,EAAA,CAAAkB,UAAA,IAAA2C,iCAAA,iBAIM;MACR7D,EAAA,CAAAW,YAAA,EAAM;MAGVX,EAAA,CAAAkB,UAAA,IAAA4C,4CAAA,4BAA4G;;;MAlB/D9D,EAAA,CAAAY,SAAA,GAAQ;MAARZ,EAAA,CAAAa,UAAA,YAAA4C,GAAA,CAAAf,KAAA,CAAQ;MAKR1C,EAAA,CAAAY,SAAA,GAAQ;MAARZ,EAAA,CAAAa,UAAA,YAAA4C,GAAA,CAAAf,KAAA,CAAQ;MAKR1C,EAAA,CAAAY,SAAA,GAAQ;MAARZ,EAAA,CAAAa,UAAA,YAAA4C,GAAA,CAAAf,KAAA,CAAQ;MAQpC1C,EAAA,CAAAY,SAAA,GAAkB;MAAlBZ,EAAA,CAAAa,UAAA,SAAA4C,GAAA,CAAAtB,YAAA,CAAkB;;;;;;SDbtBC,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}