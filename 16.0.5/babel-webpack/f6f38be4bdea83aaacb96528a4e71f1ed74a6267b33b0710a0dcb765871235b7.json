{"ast":null,"code":"import { Init } from '../../Inits/init-functionalities';\nimport * as i0 from \"@angular/core\";\nclass FunctionalitiesService extends Init {\n  constructor() {\n    super();\n    this.load();\n  }\n  getFunctionalities() {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    return functionalities;\n  }\n  getFunctionality(functionalityId) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    return functionalities.find(functionality => functionality.id === functionalityId);\n  }\n  getFunctionalityTitle(functionalityId) {\n    const functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    if (functionalities && functionalities.length > 0) {\n      const functionality = functionalities.find(f => f.id === functionalityId);\n      if (functionality) {\n        return functionality.title;\n      }\n    }\n    return '';\n  }\n  deleteFunctionality(functionalityId) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    for (let i = 0; i < functionalities.length; i++) {\n      if (functionalities[i].id == functionalityId) {\n        functionalities.splice(i, 1);\n      }\n    }\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n  addFunctionality(newFunctionality) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    functionalities.push(newFunctionality);\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n  updateFunctionality(updatedFunctionality) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    for (let i = 0; i < functionalities.length; i++) {\n      if (functionalities[i].id == updatedFunctionality.id) {\n        functionalities[i] = updatedFunctionality;\n      }\n    }\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n  updateFunctionalityStatus(functionalityId, status) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    for (let i = 0; i < functionalities.length; i++) {\n      if (functionalities[i].id == functionalityId) {\n        functionalities[i].status = status;\n      }\n    }\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n  getFunctionalityById(functionalityId) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    return functionalities.find(functionality => functionality.id === functionalityId);\n  }\n}\nFunctionalitiesService.ɵfac = function FunctionalitiesService_Factory(t) {\n  return new (t || FunctionalitiesService)();\n};\nFunctionalitiesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FunctionalitiesService,\n  factory: FunctionalitiesService.ɵfac,\n  providedIn: 'root'\n});\nexport { FunctionalitiesService };","map":{"version":3,"names":["Init","FunctionalitiesService","constructor","load","getFunctionalities","functionalities","JSON","parse","localStorage","getItem","getFunctionality","functionalityId","find","functionality","id","getFunctionalityTitle","length","f","title","deleteFunctionality","i","splice","setItem","stringify","addFunctionality","newFunctionality","push","updateFunctionality","updatedFunctionality","updateFunctionalityStatus","status","getFunctionalityById","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\Services\\Functionalities\\functionalities.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Init } from '../../Inits/init-functionalities';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FunctionalitiesService extends Init{\n  functionalities;\n\n  constructor() { \n    super();\n    this.load();\n  }\n\n  getFunctionalities() {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    return functionalities;\n  }\n\n  getFunctionality(functionalityId: string) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    return functionalities.find(functionality => functionality.id === functionalityId);\n  }\n\n  getFunctionalityTitle(functionalityId: string): string {\n    const functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    if (functionalities && functionalities.length > 0) {\n      const functionality = functionalities.find((f) => f.id === functionalityId);\n      if (functionality) {\n        return functionality.title;\n      }\n    }\n    return '';\n  }\n\n  deleteFunctionality(functionalityId: string) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    for(let i = 0; i < functionalities.length; i++) {\n      if(functionalities[i].id == functionalityId) {\n        functionalities.splice(i, 1);\n      }\n    }\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n  \n  addFunctionality(newFunctionality) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    functionalities.push(newFunctionality);\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n\n  updateFunctionality(updatedFunctionality) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    for (let i = 0; i < functionalities.length; i++) {\n      if (functionalities[i].id == updatedFunctionality.id) {\n        functionalities[i] = updatedFunctionality;\n      }\n    }\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n\n  updateFunctionalityStatus(functionalityId: string, status: string) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    for (let i = 0; i < functionalities.length; i++) {\n      if (functionalities[i].id == functionalityId) {\n        functionalities[i].status = status;\n      }\n    }\n    localStorage.setItem('functionalities', JSON.stringify(functionalities));\n  }\n\n  getFunctionalityById(functionalityId: string) {\n    let functionalities = JSON.parse(localStorage.getItem('functionalities'));\n    return functionalities.find(functionality => functionality.id === functionalityId);\n  }\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,kCAAkC;;AAEvD,MAIaC,sBAAuB,SAAQD,IAAI;EAG9CE,YAAA;IACE,KAAK,EAAE;IACP,IAAI,CAACC,IAAI,EAAE;EACb;EAEAC,kBAAkBA,CAAA;IAChB,IAAIC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzE,OAAOJ,eAAe;EACxB;EAEAK,gBAAgBA,CAACC,eAAuB;IACtC,IAAIN,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzE,OAAOJ,eAAe,CAACO,IAAI,CAACC,aAAa,IAAIA,aAAa,CAACC,EAAE,KAAKH,eAAe,CAAC;EACpF;EAEAI,qBAAqBA,CAACJ,eAAuB;IAC3C,MAAMN,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAC3E,IAAIJ,eAAe,IAAIA,eAAe,CAACW,MAAM,GAAG,CAAC,EAAE;MACjD,MAAMH,aAAa,GAAGR,eAAe,CAACO,IAAI,CAAEK,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKH,eAAe,CAAC;MAC3E,IAAIE,aAAa,EAAE;QACjB,OAAOA,aAAa,CAACK,KAAK;;;IAG9B,OAAO,EAAE;EACX;EAEAC,mBAAmBA,CAACR,eAAuB;IACzC,IAAIN,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzE,KAAI,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,eAAe,CAACW,MAAM,EAAEI,CAAC,EAAE,EAAE;MAC9C,IAAGf,eAAe,CAACe,CAAC,CAAC,CAACN,EAAE,IAAIH,eAAe,EAAE;QAC3CN,eAAe,CAACgB,MAAM,CAACD,CAAC,EAAE,CAAC,CAAC;;;IAGhCZ,YAAY,CAACc,OAAO,CAAC,iBAAiB,EAAEhB,IAAI,CAACiB,SAAS,CAAClB,eAAe,CAAC,CAAC;EAC1E;EAEAmB,gBAAgBA,CAACC,gBAAgB;IAC/B,IAAIpB,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzEJ,eAAe,CAACqB,IAAI,CAACD,gBAAgB,CAAC;IACtCjB,YAAY,CAACc,OAAO,CAAC,iBAAiB,EAAEhB,IAAI,CAACiB,SAAS,CAAClB,eAAe,CAAC,CAAC;EAC1E;EAEAsB,mBAAmBA,CAACC,oBAAoB;IACtC,IAAIvB,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzE,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,eAAe,CAACW,MAAM,EAAEI,CAAC,EAAE,EAAE;MAC/C,IAAIf,eAAe,CAACe,CAAC,CAAC,CAACN,EAAE,IAAIc,oBAAoB,CAACd,EAAE,EAAE;QACpDT,eAAe,CAACe,CAAC,CAAC,GAAGQ,oBAAoB;;;IAG7CpB,YAAY,CAACc,OAAO,CAAC,iBAAiB,EAAEhB,IAAI,CAACiB,SAAS,CAAClB,eAAe,CAAC,CAAC;EAC1E;EAEAwB,yBAAyBA,CAAClB,eAAuB,EAAEmB,MAAc;IAC/D,IAAIzB,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzE,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,eAAe,CAACW,MAAM,EAAEI,CAAC,EAAE,EAAE;MAC/C,IAAIf,eAAe,CAACe,CAAC,CAAC,CAACN,EAAE,IAAIH,eAAe,EAAE;QAC5CN,eAAe,CAACe,CAAC,CAAC,CAACU,MAAM,GAAGA,MAAM;;;IAGtCtB,YAAY,CAACc,OAAO,CAAC,iBAAiB,EAAEhB,IAAI,CAACiB,SAAS,CAAClB,eAAe,CAAC,CAAC;EAC1E;EAEA0B,oBAAoBA,CAACpB,eAAuB;IAC1C,IAAIN,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzE,OAAOJ,eAAe,CAACO,IAAI,CAACC,aAAa,IAAIA,aAAa,CAACC,EAAE,KAAKH,eAAe,CAAC;EACpF;;AApEWV,sBAAuB,C;mBAAvBA,sBAAsB;AAAA;AAAtBA,sBAAuB,C;SAAvBA,sBAAsB;EAAA+B,OAAA,EAAtB/B,sBAAsB,CAAAgC,IAAA;EAAAC,UAAA,EAHrB;AAAM;SAGPjC,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}