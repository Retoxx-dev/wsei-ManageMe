{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../todo.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../task-card/task-card.component\";\nfunction TaskDashboardComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-task-card\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"title\", item_r3.title)(\"status\", item_r3.status);\n  }\n}\nfunction TaskDashboardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, TaskDashboardComponent_div_5_div_1_Template, 2, 2, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r3.status == \"todo\");\n  }\n}\nfunction TaskDashboardComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-task-card\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"title\", item_r6.title)(\"status\", item_r6.status);\n  }\n}\nfunction TaskDashboardComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, TaskDashboardComponent_div_9_div_1_Template, 2, 2, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r6.status == \"doing\");\n  }\n}\nfunction TaskDashboardComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-task-card\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"title\", item_r9.title)(\"status\", item_r9.status);\n  }\n}\nfunction TaskDashboardComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, TaskDashboardComponent_div_13_div_1_Template, 2, 2, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r9.status == \"done\");\n  }\n}\nclass TaskDashboardComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n  }\n  ngOnInit() {\n    this.todos = this.todoService.getTodos();\n    console.log(this.todos);\n  }\n}\nTaskDashboardComponent.ɵfac = function TaskDashboardComponent_Factory(t) {\n  return new (t || TaskDashboardComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n};\nTaskDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskDashboardComponent,\n  selectors: [[\"app-task-dashboard\"]],\n  inputs: {\n    status: \"status\"\n  },\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"column\"], [\"class\", \"col-md-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\"], [4, \"ngIf\"], [3, \"title\", \"status\"]],\n  template: function TaskDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"h3\");\n      i0.ɵɵtext(3, \"TODO\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1);\n      i0.ɵɵtemplate(5, TaskDashboardComponent_div_5_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"h3\");\n      i0.ɵɵtext(8, \"DOING\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, TaskDashboardComponent_div_9_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"h3\");\n      i0.ɵɵtext(12, \"DONE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, TaskDashboardComponent_div_13_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.TaskCardComponent],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr; \\n\\n  gap: 20px; \\n\\n}\\n\\n.column[_ngcontent-%COMP%] {\\n  background-color: #f0f0f0;\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFzay1kYXNoYm9hcmQvdGFzay1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0Esa0NBQUEsRUFBQSw4QkFBQTtFQUNBLFNBQUEsRUFBQSx3QkFBQTtBQUNKOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxhQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyOyAvKiBUaHJlZSBlcXVhbC13aWR0aCBjb2x1bW5zICovXHJcbiAgICBnYXA6IDIwcHg7IC8qIEdhcCBiZXR3ZWVuIGNvbHVtbnMgKi9cclxufVxyXG5cclxuLmNvbHVtbiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { TaskDashboardComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","item_r3","title","status","ɵɵtemplate","TaskDashboardComponent_div_5_div_1_Template","item_r6","TaskDashboardComponent_div_9_div_1_Template","item_r9","TaskDashboardComponent_div_13_div_1_Template","TaskDashboardComponent","constructor","todoService","ngOnInit","todos","getTodos","console","log","ɵɵdirectiveInject","i1","TodoService","selectors","inputs","decls","vars","consts","template","TaskDashboardComponent_Template","rf","ctx","ɵɵtext","TaskDashboardComponent_div_5_Template","TaskDashboardComponent_div_9_Template","TaskDashboardComponent_div_13_Template"],"sources":["C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\task-dashboard\\task-dashboard.component.ts","C:\\Users\\Kacper\\Desktop\\ManageMe\\src\\app\\task-dashboard\\task-dashboard.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { TodoService } from '../todo.service';\n\n@Component({\n  selector: 'app-task-dashboard',\n  templateUrl: './task-dashboard.component.html',\n  styleUrls: ['./task-dashboard.component.scss']\n})\nexport class TaskDashboardComponent {\n  @Input() status: string;\n\n  constructor(private todoService: TodoService) { }\n\n  todos;\n\n  ngOnInit() {\n    this.todos = this.todoService.getTodos();\n    console.log(this.todos)\n  }\n}\n","<div>\n  <div class=\"container\">\n    <h3>TODO</h3>\n    <div class=\"column\">\n        <div class=\"col-md-4\" *ngFor=\"let item of todos\">\n            <div *ngIf=\"item.status == 'todo'\">\n                <app-task-card [title]=\"item.title\" [status]=\"item.status\"></app-task-card>\n            </div>\n        </div>\n    </div>\n    <div class=\"column\">\n        <h3>DOING</h3>\n        <div class=\"col-md-4\" *ngFor=\"let item of todos\">\n            <div *ngIf=\"item.status == 'doing'\">\n                <app-task-card [title]=\"item.title\" [status]=\"item.status\"></app-task-card>\n            </div>\n        </div>\n    </div>\n    <div class=\"column\">\n        <h3>DONE</h3>\n        <div class=\"col-md-4\" *ngFor=\"let item of todos\">\n            <div *ngIf=\"item.status == 'done'\">\n                <app-task-card [title]=\"item.title\" [status]=\"item.status\"></app-task-card>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":";;;;;;ICKYA,EAAA,CAAAC,cAAA,UAAmC;IAC/BD,EAAA,CAAAE,SAAA,uBAA2E;IAC/EF,EAAA,CAAAG,YAAA,EAAM;;;;IADaH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,UAAA,UAAAC,OAAA,CAAAC,KAAA,CAAoB,WAAAD,OAAA,CAAAE,MAAA;;;;;IAF3CR,EAAA,CAAAC,cAAA,aAAiD;IAC7CD,EAAA,CAAAS,UAAA,IAAAC,2CAAA,iBAEM;IACVV,EAAA,CAAAG,YAAA,EAAM;;;;IAHIH,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,UAAA,SAAAC,OAAA,CAAAE,MAAA,WAA2B;;;;;IAQjCR,EAAA,CAAAC,cAAA,UAAoC;IAChCD,EAAA,CAAAE,SAAA,uBAA2E;IAC/EF,EAAA,CAAAG,YAAA,EAAM;;;;IADaH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,UAAA,UAAAM,OAAA,CAAAJ,KAAA,CAAoB,WAAAI,OAAA,CAAAH,MAAA;;;;;IAF3CR,EAAA,CAAAC,cAAA,aAAiD;IAC7CD,EAAA,CAAAS,UAAA,IAAAG,2CAAA,iBAEM;IACVZ,EAAA,CAAAG,YAAA,EAAM;;;;IAHIH,EAAA,CAAAI,SAAA,GAA4B;IAA5BJ,EAAA,CAAAK,UAAA,SAAAM,OAAA,CAAAH,MAAA,YAA4B;;;;;IAQlCR,EAAA,CAAAC,cAAA,UAAmC;IAC/BD,EAAA,CAAAE,SAAA,uBAA2E;IAC/EF,EAAA,CAAAG,YAAA,EAAM;;;;IADaH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,UAAA,UAAAQ,OAAA,CAAAN,KAAA,CAAoB,WAAAM,OAAA,CAAAL,MAAA;;;;;IAF3CR,EAAA,CAAAC,cAAA,aAAiD;IAC7CD,EAAA,CAAAS,UAAA,IAAAK,4CAAA,iBAEM;IACVd,EAAA,CAAAG,YAAA,EAAM;;;;IAHIH,EAAA,CAAAI,SAAA,GAA2B;IAA3BJ,EAAA,CAAAK,UAAA,SAAAQ,OAAA,CAAAL,MAAA,WAA2B;;;ADlB7C,MAKaO,sBAAsB;EAGjCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAIhDC,QAAQA,CAAA;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,WAAW,CAACG,QAAQ,EAAE;IACxCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,KAAK,CAAC;EACzB;;AAVWJ,sBAAsB,C;mBAAtBA,sBAAsB,EAAAf,EAAA,CAAAuB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAtBV,sBAAsB,C;QAAtBA,sBAAsB;EAAAW,SAAA;EAAAC,MAAA;IAAAnB,MAAA;EAAA;EAAAoB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRnCjC,EAAA,CAAAC,cAAA,UAAK;MAEGD,EAAA,CAAAmC,MAAA,WAAI;MAAAnC,EAAA,CAAAG,YAAA,EAAK;MACbH,EAAA,CAAAC,cAAA,aAAoB;MAChBD,EAAA,CAAAS,UAAA,IAAA2B,qCAAA,iBAIM;MACVpC,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAC,cAAA,aAAoB;MACZD,EAAA,CAAAmC,MAAA,YAAK;MAAAnC,EAAA,CAAAG,YAAA,EAAK;MACdH,EAAA,CAAAS,UAAA,IAAA4B,qCAAA,iBAIM;MACVrC,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAC,cAAA,cAAoB;MACZD,EAAA,CAAAmC,MAAA,YAAI;MAAAnC,EAAA,CAAAG,YAAA,EAAK;MACbH,EAAA,CAAAS,UAAA,KAAA6B,sCAAA,iBAIM;MACVtC,EAAA,CAAAG,YAAA,EAAM;;;MArBqCH,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAAK,UAAA,YAAA6B,GAAA,CAAAf,KAAA,CAAQ;MAQRnB,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAAK,UAAA,YAAA6B,GAAA,CAAAf,KAAA,CAAQ;MAQRnB,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAAK,UAAA,YAAA6B,GAAA,CAAAf,KAAA,CAAQ;;;;;;SDZ1CJ,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}